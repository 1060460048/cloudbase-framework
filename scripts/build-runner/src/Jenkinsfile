pipeline {
    agent {
      docker {
        image 'ccr.ccs.tencentyun.com/cloudbaseframework/cloudbase-framework-runner:1.6.13'
        reuseNode true
        args '-v /root/.cloudbase-pnpm-cache:/root/.pnpm-store \
        -v /root/.cloudbase-yarn-cache:/usr/local/share/.cache/yarn/v6 \
        -v /root/.cloudbase-npm-cache:/root/.npm \
        -v /root/.weapps-build/app/mp/node_modules:/root/.weapps-build/app/mp/node_modules\
        -v /root/.weapps-build/app/h5/node_modules:/root/.weapps-build/app/h5/node_modules'
      }
    }
    stages  {
        stage("检出 ZIP 包") {
            when { environment name: 'BUILD_TYPE', value: 'ZIP' }
            steps {
                sh '''
                echo $NODE_ENV
                mkdir -p /root/cloudbase-workspace
                curl -fsSL "$CODE_URL_WITH_AUTH" -o code.zip
                unzip -o code.zip -d /root/cloudbase-workspace
                '''
            }
        }
        stage("检出代码仓库") {
            when { environment name: 'BUILD_TYPE', value: 'CODE_REPO' }
            steps {
                sh '''
                cd /root
                git clone --depth 1 --branch "$CODE_REF" "$CODE_URL_WITH_AUTH" cloudbase-workspace
                '''
            }
        }
        stage("登录") {
            steps {
                sh '''
                # 使用临时密钥登录
                cloudbase login --apiKeyId "$API_SECRET_ID"  --apiKey "$API_SECRET_KEY" --token "$API_TOKEN"

                # 查看缓存
                ls /root/.weapps-materials
                ls /root/.npm
                ls /root/.pnpm-store
                ls /root/.weapps-build
                ls /usr/local/share/.cache/yarn/v6  | wc -l
                ls /root/.weapps-build/app/h5/node_modules  | wc -l
                ls /root/.weapps-build/app/mp/node_modules  | wc -l
                '''
            }
        }
         stage("构建") {
            steps {
                sh '''
                cd /root/cloudbase-workspace
                CI=true cloudbase framework deploy -e "$ENV_ID" --verbose
                '''
            }
        }
    }
    post {
        // 构建结束时的操作
        always {
           sh '''
           # cloudbase logout
           '''
        }
    }
}
